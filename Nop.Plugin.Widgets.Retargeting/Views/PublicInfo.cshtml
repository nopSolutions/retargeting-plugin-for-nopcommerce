@using System.Web.Script.Serialization
@using Nop.Core.Domain.Orders
@using Nop.Plugin.Widgets.Retargeting.Models
@model Nop.Plugin.Widgets.Retargeting.Models.PublicInfoModel
@{
    Layout = "";
}

<script>
    var add_to_cart_button_id = "";
    var price_label_id = "";
    @if (Model.ProductId > 0)
    {
        <text>
    add_to_cart_button_id = "@Model.AddToCartButtonIdDetailsPrefix" + "@Model.ProductId";
    price_label_id = "@Model.ProductPriceLabelDetailsSelector";
    </text>
    }

    (function () {
        ra_key = "@Model.TrackingApiKey";
        ra_params = {
            add_to_cart_button_id: add_to_cart_button_id,
            price_label_id: price_label_id
        };
        var ra = document.createElement("script");
        ra.type = "text/javascript";
        ra.async = true;
        ra.src = ("https:" == document.location.protocol ? "https://" : "http://") + "tracking.retargeting.biz/v3/rajs/" + ra_key + ".js";
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(ra, s);
    })();

    var isProductDetailsButton = {};

    var _ra = _ra || {};

    $(document).ready(function () {
        //add to cart
        $(document).ajaxComplete(function (event, xhr) {
            if (xhr) {
                var json;

                try {
                    json = JSON.parse(xhr.responseText);
                } catch (e) {
                    return;
                }

                var addToCartProductInfo = json.ra_addToCartProductInfo;
                if (!addToCartProductInfo) {
                    return;
                }

                if (addToCartProductInfo.shoppingCartType == "@((int)ShoppingCartType.ShoppingCart)") {
                    if (isProductDetailsButton) {
                        //add to cart
                        addToCart(addToCartProductInfo.product_id, addToCartProductInfo.quantity, addToCartProductInfo.variation);
                    } else {
                        //get product info
                        $.ajax({
                            cache: false,
                            url: "/WidgetsRetargeting/GetProductInfo?productId=" + addToCartProductInfo.product_id,
                            type: "post",
                            success: function (data) {
                                if (data.result) {
                                    //send product
                                    sendProduct(data.result);
                                    //add to cart
                                    addToCart(addToCartProductInfo.product_id, addToCartProductInfo.quantity, addToCartProductInfo.variation);
                                }
                            }
                        });
                    }
                } else {
                    if (addToCartProductInfo.shoppingCartType == "@((int)ShoppingCartType.Wishlist)") {
                        if (isProductDetailsButton) {
                            //add to wishlist
                            addToWishlist(addToCartProductInfo.product_id);
                        } else {
                            //get product info
                            $.ajax({
                                cache: false,
                                url: "/WidgetsRetargeting/GetProductInfo?productId=" + addToCartProductInfo.product_id,
                                type: "post",
                                success: function (data) {
                                    if (data.result) {
                                        //send product
                                        sendProduct(data.result);
                                        //add to wishlist
                                        addToWishlist(addToCartProductInfo.product_id);
                                    }
                                }
                            });
                        }
                    }
                }
            }
        });

        //user data (login, register)
        @if (Model.RenderSetEmailFunc)
        {
            <text>
        setUserData("@Model.CustomerModel.Email", "@Model.CustomerModel.Name", "@Model.CustomerModel.Phone");
        </text>
        }

        //category
        @if (Model.RenderSendCategoryFunc)
        {
            <text>
        var parentCategoryId = false;
        var breadcrumb1;
        var breadcrumb2;

        //breabcrumb 1st level
        if ("@Model.CategoryModel.ParentCategoryId" > 0) {
            breadcrumb1 = {};
            parentCategoryId = "@Model.CategoryModel.ParentCategoryId";
            breadcrumb1 = {
                "id": parentCategoryId,
                "name": "@Model.CategoryModel.ParentCategoryName",
                "parent": "@Model.CategoryModel.ParentParentCategoryId"
            }
        }

        //breabcrumb 2nd level
        if ("@Model.CategoryModel.ParentParentCategoryId" > 0) {
            breadcrumb2 = {};
            breadcrumb2 =
            {
                "id": "@Model.CategoryModel.ParentParentCategoryId",
                "name": "@Model.CategoryModel.ParentParentCategoryName",
                "parent": false
            }
        }

        //send category script
        sendCategoryInfo("@Model.CategoryModel.CategoryId", "@Model.CategoryModel.CategoryName",
            parentCategoryId, breadcrumb1, breadcrumb2);
        </text>
        }

        //manufacturer
        @if (Model.RenderSendBrandFunc)
        {
            <text>
        sendBrandInfo("@Model.ManufacturerModel.ManufacturerId", "@Model.ManufacturerModel.ManufacturerName");
        </text>
        }

        //product
        @if (Model.RenderSendProductFunc)
        {
            <text>
        var productId = "@Model.ProductId";
        //get product info
        $.ajax({
            cache: false,
            url: "/WidgetsRetargeting/GetProductInfo?productId=" + productId,
            type: "post",
            success: function (data) {
                if (data.result) {
                    //send product
                    sendProduct(data.result);

                    //set variation event
                    $("select[name^=product_attribute_]").on("change", function () {
                        setVariation(this);
                    });
                    $("[name^=product_attribute_][type=radio]").on("change", function () {
                        setVariation(this);
                    });
                    $("[name^=product_attribute_][type=checkbox]").on("change", function () {
                        setVariation(this);
                    });
                }
            }
        });

        </text>
        }

        //add to cart
        @if (Model.RenderAddToCartFunc)
        {
            <text>
        //add to cart (product details page)
        var addToCartDetailsButtons = $("[id^=" + "@Model.AddToCartButtonIdDetailsPrefix" + "]");
        addToCartDetailsButtons.each(function (index) {
            $(addToCartDetailsButtons[index]).on("click", function (e) {
                isProductDetailsButton = true;
            });
        });

        //add to cart (product box)
        var addToCartProductBoxButtons = $("@Model.AddToCartCatalogButtonSelector");
        addToCartProductBoxButtons.each(function (index) {
            $(addToCartProductBoxButtons[index]).on("click", function (e) {
                isProductDetailsButton = false;
            });
        });
        </text>

            if (Model.AddToCartProductInfo != null)
            {
                <text>
        var addToCartProductInfo = JSON.parse('@(Html.Raw(new JavaScriptSerializer().Serialize(Model.AddToCartProductInfo)))');

        if (addToCartProductInfo.shoppingCartType == "@((int) ShoppingCartType.ShoppingCart)") {
                //get product info
                $.ajax({
                    cache: false,
                    url: "/WidgetsRetargeting/GetProductInfo?productId=" + addToCartProductInfo.product_id,
                    type: "post",
                    success: function (data) {
                        if (data.result) {
                            //send product
                            sendProduct(data.result);
                            //add to cart
                            addToCart(addToCartProductInfo.product_id, addToCartProductInfo.quantity, addToCartProductInfo.variation);
                        }
                    }
                });
        } else {
            if (addToCartProductInfo.shoppingCartType == "@((int) ShoppingCartType.Wishlist)") {
                    //get product info
                    $.ajax({
                        cache: false,
                        url: "/WidgetsRetargeting/GetProductInfo?productId=" + addToCartProductInfo.product_id,
                        type: "post",
                        success: function (data) {
                            if (data.result) {
                                //send product
                                sendProduct(data.result);
                                //add to wishlist
                                addToWishlist(addToCartProductInfo.product_id);
                            }
                        }
                    });
            }
        }

                </text>
            }
        }

        //remove from cart
        @foreach (var item in Model.CartItemsToDelete)
        {
            <text>
                removeFromCart('@item.Value["productId"]', '@item.Value["quantity"]', '@(Html.Raw(item.Value["variation"]))');
            </text>
        }

        //add to wishlist
        @if (Model.RenderAddToWishlistFunc)
        {
            <text>
        //add to wishlist (product details page)
        var addToWishlistDetailsButtons = $("[id^=" + "@Model.AddToWishlistButtonIdDetailsPrefix" + "]");
        addToWishlistDetailsButtons.each(function (index) {
            $(addToWishlistDetailsButtons[index]).on("click", function (e) {
                isProductDetailsButton = true;
            });
        });

        //add to wishlist (product box)
        var addToWishlistProductBoxButtons = $("@Model.ProductBoxSelector" + " "
                                                + "@Model.AddToWishlistCatalogButtonSelector");
        addToWishlistProductBoxButtons.each(function (index) {
            $(addToWishlistProductBoxButtons[index]).on("click", function (e) {
                isProductDetailsButton = false;
            });
        });
        </text>
        }

        //click product image
        @if (Model.RenderClickImageFunc)
        {
            <text>
        var productMainPicture = $("[id^=" + "@Model.ProductMainPictureIdDetailsPrefix" + "]");
        $(productMainPicture[0]).on("click", function (e) {
            var productId = $(this).attr("id").replace("@Model.ProductMainPictureIdDetailsPrefix", "");
            clickImage(productId);
        });
        </text>
        }

        //add product review
        @if (Model.RenderCommentOnProductFunc)
        {
            <text>
        var resultBlock = $("@Model.ProductReviewAddedResultSelector");
        if (resultBlock.length > 0) {
            var productId = "@Model.ProductId";
            commentOnProduct(productId);
        }
        </text>
        }

        //send order
        @if (Model.RenderSendOrderFunc)
        {
            <text>
        var saveOrderProducts = [];

        var saveOrderInfo = {
            "order_no": "@Model.OrderModel.Id",
            "lastname": "@Model.OrderModel.LastName",
            "firstname": "@Model.OrderModel.FirstName",
            "email": "@Model.OrderModel.Email",
            "phone": "@Model.OrderModel.Phone",
            "state": "@Model.OrderModel.State",
            "city": "@Model.OrderModel.City",
            "address": "@Model.OrderModel.Address",
            "birthday": "@Model.OrderModel.Birthday",
            "discount_code": JSON.parse("[" + "@Model.OrderModel.DiscountCode" + "]"),
            "discount": "@Model.OrderModel.Discount",
            "shipping": "@Model.OrderModel.Shipping",
            "rebates": "@Model.OrderModel.Rebates",
            "fees": "@Model.OrderModel.Fees",
            "total": "@Model.OrderModel.Total"
        };
        </text>

            foreach (var orderItem in Model.OrderModel.OrderItems)
            {
                <text>
                    var productObj@(orderItem.Id) = {};
                    productObj@(orderItem.Id)["id"] = "@orderItem.Id";
                    productObj@(orderItem.Id)["quantity"] = "@orderItem.Quantity";
                    productObj@(orderItem.Id)["price"] = "@orderItem.Price";
                    productObj@(orderItem.Id)["variation_code"] = "@orderItem.VariationCode";
                    saveOrderProducts.push(productObj@(orderItem.Id));
                </text>
            }

            <text>
        saveOrder(saveOrderInfo, saveOrderProducts);
        </text>
        }

        //help page
        @if (Model.RenderVisitHelpPageFunc)
        {
            <text>
        visitHelpPage();
        </text>
        }

        //send cart item ids
        @if (Model.RenderCheckoutIdsFunc)
        {
            <text>
        var ids = "@Model.CartItemIds".split(",").filter(function (el) { return el.length !== 0 });
        checkoutIds(ids);
        </text>
        }
    });

    function saveOrder(saveOrderInfo, saveOrderProducts) {
        _ra.saveOrderInfo = saveOrderInfo;
        _ra.saveOrderProducts = saveOrderProducts;

        if (_ra.ready !== undefined) {
            _ra.saveOrder(_ra.saveOrderInfo, _ra.saveOrderProducts);
        }
    }

    function addToCart(productId, productQty, variation) {
        if (_ra.ready !== undefined) {
            _ra.addToCart(productId, productQty, variation);
        }
    }

    function removeFromCart(productId, productQty, variation) {
        _ra.removeFromCartInfo = {
            "product_id": productId,
            "quantity": productQty,
            "variation": variation
            };

        if (_ra.ready !== undefined) {
            _ra.removeFromCart(
                _ra.removeFromCartInfo.product_id,
                _ra.removeFromCartInfo.quantity,
                _ra.removeFromCartInfo.variation
            );
        }
    }

    function addToWishlist(productId) {
        if (_ra.ready !== undefined) {
            _ra.addToWishlist(productId);
        }
    }

    function sendProduct(productInfo) {
        _ra.sendProductInfo = {
            "id": productInfo.id,
            "name": productInfo.name,
            "url": productInfo.url,
            "img": productInfo.img,
            "price": productInfo.price,
            "promo": productInfo.promo,
            "brand": productInfo.brand,
            "category": productInfo.category,
            inventory: productInfo.inventory
        };

        if (_ra.ready !== undefined) {
            _ra.sendProduct(_ra.sendProductInfo);
        }
    }

    function setUserData(email, name, phone) {
        if (email && email.length > 0) {
            _ra.setEmailInfo = {
                "email": email,
                "name": name,
                "phone": phone
            };

            if (_ra.ready !== undefined) {
                _ra.setEmail(_ra.setEmailInfo);
            }
        }
    }

    function sendCategoryInfo(categoryId, categoryName, parentCategoryId, breadcrumb1, breadcrumb2) {
        var breadcrumb = [];
        if (breadcrumb1) {
            breadcrumb.push(breadcrumb1);
        }
        if (breadcrumb2) {
            breadcrumb.push(breadcrumb2);
        }

        _ra.sendCategoryInfo = {
            "id": categoryId,
            "name": categoryName,
            "parent": parentCategoryId,
            "breadcrumb": breadcrumb
        }

        if (_ra.ready !== undefined) {
            _ra.sendCategory(_ra.sendCategoryInfo);
        }
    }

    function sendBrandInfo(manufacturerId, manufacturerName) {
        _ra.sendBrandInfo = {
            "id": manufacturerId,
            "name": manufacturerName
        };

        if (_ra.ready !== undefined) {
            _ra.sendBrand(_ra.sendBrandInfo);
        }
    }

    function clickImage(productId) {
        if (_ra.ready !== undefined) {
            _ra.clickImage(productId);
        }
    }

    function commentOnProduct(productId) {
        _ra.commentOnProductInfo = {
            "product_id": productId
        };

        if (_ra.ready !== undefined) {
            _ra.commentOnProduct(_ra.commentOnProductInfo.product_id);
        }
    }

    function visitHelpPage() {
        _ra.visitHelpPageInfo = {
            "visit": true
        }

        if (_ra.ready !== undefined) {
            _ra.visitHelpPage();
        }
    }

    function checkoutIds(ids) {
        _ra.checkoutIdsInfo = ids;

        if (_ra.ready !== undefined) {
            _ra.checkoutIds(_ra.checkoutIdsInfo);
        }
    }

    function setVariation(attrInput) {
        var productId = $(attrInput).closest("[data-productid]").attr("data-productid");

        $.ajax({
            cache: false,
            async: true,
            url: "/WidgetsRetargeting/IsProductCombinationInStock?productId=" + productId,
            data: $("#product-details-form").serialize(),
            type: "post",
            success: function (data) {
                var productVariation = false;

                if (data.variationCode.length > 0)
                    productVariation = {
                        "code": data.variationCode,
                        "stock": data.stock,
                        "details": data.variationDetails
                    };

                if (_ra.ready !== undefined) {
                    _ra.setVariation(productId, productVariation);
                }
            }
        });
    }
</script>